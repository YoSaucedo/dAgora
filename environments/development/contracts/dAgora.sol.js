// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"removeProduct","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"productList","outputs":[{"name":"dph","type":"bytes32"},{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"gpcSegment","type":"uint256"},{"name":"price","type":"uint256"},{"name":"stock","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"customer","type":"address"},{"name":"orderIndex","type":"uint256"},{"name":"newStatus","type":"uint8"}],"name":"updateOrderStatus","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"orderCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"bytes32"}],"name":"buy","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"productDph","type":"bytes32"},{"name":"newStock","type":"uint256"}],"name":"updateProductStock","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"productMap","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"gpcSegment","type":"uint256"},{"name":"price","type":"uint256"},{"name":"stock","type":"uint256"}],"name":"addProduct","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"productCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"orderList","outputs":[{"name":"id","type":"uint256"},{"name":"customer","type":"address"},{"name":"totalCost","type":"uint256"},{"name":"dph","type":"bytes32"},{"name":"status","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a03191633178155600355610842806100276000396000f3606060405236156100a35760e060020a60003504630177b55681146100a55780632aa0a2ab146100c457806341c0e1b5146100f7578063526fa1d514610116578063713d856b1461013e5780639c9a106114610156578063a30f30e61461017d578063d7f0719d146101a2578063dc60d3d2146101ba578063e0f6ef871461026c578063f3fef3a314610275578063f4fb9b2f14610299578063f851a440146102e6575b005b6100a3600054600160a060020a03908116339091161461083257610002565b6001602081905260048035600090815260409020805491810154600382015460058301546102f895840193600201929086565b6100a3600054600160a060020a03908116339091161461083457610002565b6100a3600435602435604435600054600160a060020a0390811633909116146107fe57610002565b61041b60043560056020526000908152604090205481565b6100a36004356000818152600160205260408120600401549034829010156106c757610002565b6100a3600435602435600054600160a060020a0390811633909116146107e957610002565b61041b60043560026020526000908152604090205481565b61041b6004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f81018390048302840183019094528383529799986044989297509190910194509092508291508401838280828437509496505093359350506064359150506084356000805481908190600160a060020a03908116339091161461047e57610002565b61041b60035481565b6100a360043560243560005433600160a060020a039081169116146107ba57610002565b600460208181528135600090815260408082209092526024358152208054600182015460028301546003840154939094015461042d949293600160a060020a039290921692919060ff1685565b610461600054600160a060020a031681565b60408051878152606081018590526080810184905260a0810183905260c060208201818152885460026001821615610100026000190190911604918301829052919283019060e0840190899080156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050838103825287546002600182161561010002600019019091160480825260209190910190889080156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b50509850505050505050505060405180910390f35b60408051918252519081900360200190f35b60408051958652600160a060020a039490941660208601528484019290925260608401526080830152519081900360a00190f35b60408051600160a060020a03929092168252519081900360200190f35b878633604051808480519060200190808383829060006004602084601f0104600f02600301f15090500183815260200182600160a060020a03166c0100000000000000000000000002815260140193505050506040518091039020915060036000505460010190508060036000508190555081600260005060008381526020019081526020016000206000508190555060c0604051908101604052808381526020018981526020018881526020018781526020018681526020018581526020015060016000506000848152602001908152602001600020600050600082015181600001600050556020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105d257805160ff19168380011785555b506106029291505b8082111561066157600081556001016105be565b828001600101855582156105b6579182015b828111156105b65782518260005055916020019190600101906105e4565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061066557805160ff19168380011785555b506106959291506105be565b5090565b82800160010185558215610655579182015b82811115610655578251826000505591602001919060010190610677565b5050606082015160038201556080820151600482015560a0919091015160059190910155506001979650505050505050565b813411156106fd5760405133600160a060020a031690600090348590039082818181858883f1935050505015156106fd57610002565b5033600160a060020a03811660008181526005602081815260408084208054825160a0810184526001918201808252818601998a528185019a8b52606082018c8152608083018981529989526004808852868a20928a52918752858920925183559951828401805473ffffffffffffffffffffffffffffffffffffffff191690911790559951600282015597516003890155955196909701805460ff19169096179095558554840190955594815292529020018054600019019055565b604051600160a060020a03831690600090839082818181858883f1935050505015156107e557610002565b5050565b60009182526001602052604090912060050155565b600160a060020a038316600090815260046020818152604080842086855290915290912001805460ff191682179055505050565b565b600054600160a060020a0316ff",
    unlinked_binary: "606060405260008054600160a060020a03191633178155600355610842806100276000396000f3606060405236156100a35760e060020a60003504630177b55681146100a55780632aa0a2ab146100c457806341c0e1b5146100f7578063526fa1d514610116578063713d856b1461013e5780639c9a106114610156578063a30f30e61461017d578063d7f0719d146101a2578063dc60d3d2146101ba578063e0f6ef871461026c578063f3fef3a314610275578063f4fb9b2f14610299578063f851a440146102e6575b005b6100a3600054600160a060020a03908116339091161461083257610002565b6001602081905260048035600090815260409020805491810154600382015460058301546102f895840193600201929086565b6100a3600054600160a060020a03908116339091161461083457610002565b6100a3600435602435604435600054600160a060020a0390811633909116146107fe57610002565b61041b60043560056020526000908152604090205481565b6100a36004356000818152600160205260408120600401549034829010156106c757610002565b6100a3600435602435600054600160a060020a0390811633909116146107e957610002565b61041b60043560026020526000908152604090205481565b61041b6004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750506040805160208835808b0135601f81018390048302840183019094528383529799986044989297509190910194509092508291508401838280828437509496505093359350506064359150506084356000805481908190600160a060020a03908116339091161461047e57610002565b61041b60035481565b6100a360043560243560005433600160a060020a039081169116146107ba57610002565b600460208181528135600090815260408082209092526024358152208054600182015460028301546003840154939094015461042d949293600160a060020a039290921692919060ff1685565b610461600054600160a060020a031681565b60408051878152606081018590526080810184905260a0810183905260c060208201818152885460026001821615610100026000190190911604918301829052919283019060e0840190899080156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050838103825287546002600182161561010002600019019091160480825260209190910190889080156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b50509850505050505050505060405180910390f35b60408051918252519081900360200190f35b60408051958652600160a060020a039490941660208601528484019290925260608401526080830152519081900360a00190f35b60408051600160a060020a03929092168252519081900360200190f35b878633604051808480519060200190808383829060006004602084601f0104600f02600301f15090500183815260200182600160a060020a03166c0100000000000000000000000002815260140193505050506040518091039020915060036000505460010190508060036000508190555081600260005060008381526020019081526020016000206000508190555060c0604051908101604052808381526020018981526020018881526020018781526020018681526020018581526020015060016000506000848152602001908152602001600020600050600082015181600001600050556020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105d257805160ff19168380011785555b506106029291505b8082111561066157600081556001016105be565b828001600101855582156105b6579182015b828111156105b65782518260005055916020019190600101906105e4565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061066557805160ff19168380011785555b506106959291506105be565b5090565b82800160010185558215610655579182015b82811115610655578251826000505591602001919060010190610677565b5050606082015160038201556080820151600482015560a0919091015160059190910155506001979650505050505050565b813411156106fd5760405133600160a060020a031690600090348590039082818181858883f1935050505015156106fd57610002565b5033600160a060020a03811660008181526005602081815260408084208054825160a0810184526001918201808252818601998a528185019a8b52606082018c8152608083018981529989526004808852868a20928a52918752858920925183559951828401805473ffffffffffffffffffffffffffffffffffffffff191690911790559951600282015597516003890155955196909701805460ff19169096179095558554840190955594815292529020018054600019019055565b604051600160a060020a03831690600090839082818181858883f1935050505015156107e557610002565b5050565b60009182526001602052604090912060050155565b600160a060020a038316600090815260046020818152604080842086855290915290912001805460ff191682179055505050565b565b600054600160a060020a0316ff",
    address: "0xb4cbc5391e4d6ffa4489734d36aaf1423816d5ed",
    generated_with: "2.0.8",
    contract_name: "dAgora"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.dAgora = Contract;
  }

})();
