// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"removeProduct","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"dphCode","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"updateOrderStatus","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getProductCount","outputs":[{"name":"counter","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"category","type":"string"},{"name":"price","type":"uint256"},{"name":"stock","type":"uint256"}],"name":"addProduct","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"productList","outputs":[{"name":"title","type":"string"},{"name":"description","type":"string"},{"name":"category","type":"string"},{"name":"price","type":"uint256"},{"name":"stock","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"orderCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"dphCode","type":"bytes32"},{"name":"newStock","type":"uint256"}],"name":"updateProductStock","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint256"}],"name":"getProduct","outputs":[{"name":"title","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint256"}],"name":"buy","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"productCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"orderList","outputs":[{"name":"id","type":"uint256"},{"name":"customer","type":"address"},{"name":"totalCost","type":"uint256"},{"name":"productId","type":"uint256"},{"name":"status","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a0319163317815560025561090b806100276000396000f3606060405236156100a35760e060020a60003504630177b55681146100a557806312d35eed146100c45780634a348da9146100e8578063524a046e146100fe578063528c87d214610271578063713d856b146102a0578063a30f30e6146100c4578063b9db15b4146102b8578063d96a094a14610332578063e0f6ef8714610359578063f3fef3a314610362578063f4fb9b2f14610386578063f851a440146103d3575b005b6100a3600054600160a060020a03908116339091161461090957610002565b6100a360043560243560005433600160a060020a0390811691161461090557610002565b6002545b60408051918252519081900360200190f35b6040805160206004803580820135601f81018490048402850184019095528484526100ec949193602493909291840191908190840183828082843750506040805160208835808b0135601f8101839004830284018301909452838352979998604498929750919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760649791965060249190910194509092508291508401838280828437509496505093359350506084359150506002805460019081018083556040805160a08101825289815260208181018a90528183018990526060820188905260808201879052600084815285825292832082518051825483875284872096999798959793968796821615610100026000190190911693909304601f9081018590048401949193929091019083901061063557805160ff19168380011785555b506106659291505b808211156106c4576000815560010161025d565b6103e5600435600160208190526000918252604090912060038101546004820154919283019160028401919085565b6100ec60043560046020526000908152604090205481565b6105766004356040805160208181018352600080835284815260018083529084902080548551601f60029483161561010002600019019092169390930490810184900484028301840190955284825292939092918301828280156107d95780601f106107ae576101008083540402835291602001916107d9565b6100a36004356000818152600160205260408120600301549034829010156107e557610002565b6100ec60025481565b6100a360043560243560005433600160a060020a039081169116146108da57610002565b6003602081815260048035600090815260408082209093526024358152919091208054600182015460028301549483015492909301546105e4949193600160a060020a0316929060ff1685565b610618600054600160a060020a031681565b60408051606081018490526080810183905260a080825287546002600182161561010002600019019091160490820181905290918291602083019183019060c08401908a9080156104775780601f1061044c57610100808354040283529160200191610477565b820191906000526020600020905b81548152906001019060200180831161045a57829003601f168201915b5050848103835288546002600182161561010002600019019091160480825260209190910190899080156104ec5780601f106104c1576101008083540402835291602001916104ec565b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b5050848103825287546002600182161561010002600019019091160480825260209190910190889080156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b50509850505050505050505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051958652600160a060020a039490941660208601528484019290925260608401526080830152519081900360a00190f35b60408051600160a060020a03929092168252519081900360200190f35b82800160010185558215610255579182015b82811115610255578251826000505591602001919060010190610647565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106c857805160ff19168380011785555b506106f892915061025d565b5090565b828001600101855582156106b8579182015b828111156106b85782518260005055916020019190600101906106da565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061075757805160ff19168380011785555b5061078792915061025d565b8280016001018555821561074b579182015b8281111561074b578251826000505591602001919060010190610769565b50506060820151600382015560809190910151600491909101555060019695505050505050565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b50505050509050919050565b8134111561081b5760405133600160a060020a031690600090348590039082818181858883f19350505050151561081b57610002565b5033600160a060020a03811660008181526004602081815260408084208054825160a0810184526001918201808252818601998a528185019a8b52606082018c8152608083018981529989526003808852868a20928a52918752858920925183559951828401805473ffffffffffffffffffffffffffffffffffffffff19169091179055995160028201559751988801989098559451958301805460ff1916909617909555835486019093559481529290529020018054600019019055565b604051600160a060020a03831690600090839082818181858883f19350505050151561090557610002565b5050565b56",
    unlinked_binary: "606060405260008054600160a060020a0319163317815560025561090b806100276000396000f3606060405236156100a35760e060020a60003504630177b55681146100a557806312d35eed146100c45780634a348da9146100e8578063524a046e146100fe578063528c87d214610271578063713d856b146102a0578063a30f30e6146100c4578063b9db15b4146102b8578063d96a094a14610332578063e0f6ef8714610359578063f3fef3a314610362578063f4fb9b2f14610386578063f851a440146103d3575b005b6100a3600054600160a060020a03908116339091161461090957610002565b6100a360043560243560005433600160a060020a0390811691161461090557610002565b6002545b60408051918252519081900360200190f35b6040805160206004803580820135601f81018490048402850184019095528484526100ec949193602493909291840191908190840183828082843750506040805160208835808b0135601f8101839004830284018301909452838352979998604498929750919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760649791965060249190910194509092508291508401838280828437509496505093359350506084359150506002805460019081018083556040805160a08101825289815260208181018a90528183018990526060820188905260808201879052600084815285825292832082518051825483875284872096999798959793968796821615610100026000190190911693909304601f9081018590048401949193929091019083901061063557805160ff19168380011785555b506106659291505b808211156106c4576000815560010161025d565b6103e5600435600160208190526000918252604090912060038101546004820154919283019160028401919085565b6100ec60043560046020526000908152604090205481565b6105766004356040805160208181018352600080835284815260018083529084902080548551601f60029483161561010002600019019092169390930490810184900484028301840190955284825292939092918301828280156107d95780601f106107ae576101008083540402835291602001916107d9565b6100a36004356000818152600160205260408120600301549034829010156107e557610002565b6100ec60025481565b6100a360043560243560005433600160a060020a039081169116146108da57610002565b6003602081815260048035600090815260408082209093526024358152919091208054600182015460028301549483015492909301546105e4949193600160a060020a0316929060ff1685565b610618600054600160a060020a031681565b60408051606081018490526080810183905260a080825287546002600182161561010002600019019091160490820181905290918291602083019183019060c08401908a9080156104775780601f1061044c57610100808354040283529160200191610477565b820191906000526020600020905b81548152906001019060200180831161045a57829003601f168201915b5050848103835288546002600182161561010002600019019091160480825260209190910190899080156104ec5780601f106104c1576101008083540402835291602001916104ec565b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b5050848103825287546002600182161561010002600019019091160480825260209190910190889080156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b50509850505050505050505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051958652600160a060020a039490941660208601528484019290925260608401526080830152519081900360a00190f35b60408051600160a060020a03929092168252519081900360200190f35b82800160010185558215610255579182015b82811115610255578251826000505591602001919060010190610647565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106c857805160ff19168380011785555b506106f892915061025d565b5090565b828001600101855582156106b8579182015b828111156106b85782518260005055916020019190600101906106da565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061075757805160ff19168380011785555b5061078792915061025d565b8280016001018555821561074b579182015b8281111561074b578251826000505591602001919060010190610769565b50506060820151600382015560809190910151600491909101555060019695505050505050565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b50505050509050919050565b8134111561081b5760405133600160a060020a031690600090348590039082818181858883f19350505050151561081b57610002565b5033600160a060020a03811660008181526004602081815260408084208054825160a0810184526001918201808252818601998a528185019a8b52606082018c8152608083018981529989526003808852868a20928a52918752858920925183559951828401805473ffffffffffffffffffffffffffffffffffffffff19169091179055995160028201559751988801989098559451958301805460ff1916909617909555835486019093559481529290529020018054600019019055565b604051600160a060020a03831690600090839082818181858883f19350505050151561090557610002565b5050565b56",
    address: "0x572a86986c81c54ca495d039e8428761a8916159",
    generated_with: "2.0.8",
    contract_name: "dAgora"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.dAgora = Contract;
  }

})();
