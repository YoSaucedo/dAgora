// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"removeProduct","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"dphCode","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"updateOrderStatus","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"productList","outputs":[{"name":"price","type":"uint256"},{"name":"stock","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"orderCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"price","type":"uint256"},{"name":"stock","type":"uint256"}],"name":"addProduct","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"dphCode","type":"bytes32"},{"name":"newStock","type":"uint256"}],"name":"updateProductStock","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint256"}],"name":"buy","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"productCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"orderList","outputs":[{"name":"id","type":"uint256"},{"name":"customer","type":"address"},{"name":"totalCost","type":"uint256"},{"name":"productId","type":"uint256"},{"name":"status","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a03191633178155600255610410806100276000396000f36060604052361561008d5760e060020a60003504630177b556811461008f57806312d35eed146100ad578063528c87d2146100d1578063713d856b146100f05780638b69247914610108578063a30f30e6146100ad578063d96a094a1461012f578063e0f6ef8714610153578063f3fef3a31461015c578063f4fb9b2f14610180578063f851a440146101cd575b005b61008d60005433600160a060020a0390811691161461040e57610002565b61008d60043560243560005433600160a060020a0390811691161461040a57610002565b6101df6004356001602081905260009182526040909120805491015482565b6101ec60043560046020526000908152604090205481565b6101ec60043560243560008054819033600160a060020a0390811691161461022457610002565b61008d60043560008181526001602052604081205490348290101561025757610002565b6101ec60025481565b61008d60043560243560005433600160a060020a039081169116146103e357610002565b6003602081815260048035600090815260408082209093526024358152919091208054600182015460028301549483015492909301546101fe949193600160a060020a0316929060ff1685565b61021a600054600160a060020a031681565b6060918252608052604090f35b60408051918252519081900360200190f35b606094855260809390935260a091825260c05260e09190915290f35b6060908152602090f35b506002805460019081019182905560a0604090815260608690526080859052918352602081905291209283559182015590565b813411156102885733600160a060020a03168134849003606082818181858883f19350505050151561028857610002565b6004600050600033600160a060020a0316815260200190815260200160002060005054600101905060a06040519081016040528082815260200133815260200183815260200184815260200160008152602001506003600050600033600160a060020a0316815260200190815260200160002060005060008381526020019081526020016000206000506000820151816000016000505560208201518160010160006101000a815481600160a060020a0302191690830217905550604082015181600201600050556060820151816003016000505560808201518160040160006101000a81548160ff021916908302179055509050506004600050600033600160a060020a031681526020019081526020016000206000818150548092919060010191905055506001600050600084815260200190815260200160002060005060010160008181505480929190600190039190505550505050565b600160a060020a038216600082606082818181858883f19350505050151561040a57610002565b5050565b56",
    unlinked_binary: "606060405260008054600160a060020a03191633178155600255610410806100276000396000f36060604052361561008d5760e060020a60003504630177b556811461008f57806312d35eed146100ad578063528c87d2146100d1578063713d856b146100f05780638b69247914610108578063a30f30e6146100ad578063d96a094a1461012f578063e0f6ef8714610153578063f3fef3a31461015c578063f4fb9b2f14610180578063f851a440146101cd575b005b61008d60005433600160a060020a0390811691161461040e57610002565b61008d60043560243560005433600160a060020a0390811691161461040a57610002565b6101df6004356001602081905260009182526040909120805491015482565b6101ec60043560046020526000908152604090205481565b6101ec60043560243560008054819033600160a060020a0390811691161461022457610002565b61008d60043560008181526001602052604081205490348290101561025757610002565b6101ec60025481565b61008d60043560243560005433600160a060020a039081169116146103e357610002565b6003602081815260048035600090815260408082209093526024358152919091208054600182015460028301549483015492909301546101fe949193600160a060020a0316929060ff1685565b61021a600054600160a060020a031681565b6060918252608052604090f35b60408051918252519081900360200190f35b606094855260809390935260a091825260c05260e09190915290f35b6060908152602090f35b506002805460019081019182905560a0604090815260608690526080859052918352602081905291209283559182015590565b813411156102885733600160a060020a03168134849003606082818181858883f19350505050151561028857610002565b6004600050600033600160a060020a0316815260200190815260200160002060005054600101905060a06040519081016040528082815260200133815260200183815260200184815260200160008152602001506003600050600033600160a060020a0316815260200190815260200160002060005060008381526020019081526020016000206000506000820151816000016000505560208201518160010160006101000a815481600160a060020a0302191690830217905550604082015181600201600050556060820151816003016000505560808201518160040160006101000a81548160ff021916908302179055509050506004600050600033600160a060020a031681526020019081526020016000206000818150548092919060010191905055506001600050600084815260200190815260200160002060005060010160008181505480929190600190039190505550505050565b600160a060020a038216600082606082818181858883f19350505050151561040a57610002565b5050565b56",
    address: "0xda6b1ee9fd247a8c68802809a902c1ba83afd7fc",
    generated_with: "2.0.8",
    contract_name: "dAgora"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("dAgora error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.dAgora = Contract;
  }

})();
